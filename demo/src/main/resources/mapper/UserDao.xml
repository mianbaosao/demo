<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.suanfa.shiyan.dao.UserDao">

    <!-- 基础 User ResultMap -->
    <resultMap type="org.example.suanfa.shiyan.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="addressId" column="address_id" jdbcType="INTEGER"/>
    </resultMap>

    <!-- Address ResultMap -->
    <resultMap id="AddressMap" type="org.example.suanfa.shiyan.entity.Address">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="street" column="street" jdbcType="VARCHAR"/>
        <result property="city" column="city" jdbcType="VARCHAR"/>
        <result property="country" column="country" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- Role ResultMap -->
    <resultMap id="RoleMap" type="org.example.suanfa.shiyan.entity.Role">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 原有方法保持不变 -->
    <select id="queryById" resultMap="UserMap">
        SELECT id, username, password, email, create_time, address_id
        FROM user
        WHERE id = #{id}
    </select>
    <!-- ... 其他已有方法略 ... -->

    <!-- 一对一：嵌套查询 -->
    <select id="queryWithAddressByNestedQuery" resultMap="UserWithAddressQueryMap">
        SELECT id, username, password, email, create_time, address_id
        FROM user
        WHERE id = #{id}
    </select>
    <resultMap id="UserWithAddressQueryMap" type="org.example.suanfa.shiyan.entity.User" extends="UserMap">
        <association property="address" column="address_id" javaType="org.example.suanfa.shiyan.entity.Address"
                     select="selectAddressById"/>
    </resultMap>
    <select id="selectAddressById" resultMap="AddressMap">
        SELECT id, user_id, street, city, country
        FROM address
        WHERE id = #{addressId}
    </select>

    <!-- 一对一：嵌套结果 -->
    <select id="queryWithAddressByNestedResult" resultMap="UserWithAddressResultMap">
        SELECT u.id, u.username, u.password, u.email, u.create_time, u.address_id,
               a.id as addr_id, a.user_id, a.street, a.city, a.country
        FROM user u
                 LEFT JOIN address a ON u.address_id = a.id
        WHERE u.id = #{id}
    </select>
    <resultMap id="UserWithAddressResultMap" type="org.example.suanfa.shiyan.entity.User" extends="UserMap">
        <association property="address" javaType="org.example.suanfa.shiyan.entity.Address">
            <id property="id" column="addr_id" jdbcType="INTEGER"/>
            <result property="userId" column="user_id" jdbcType="INTEGER"/>
            <result property="street" column="street" jdbcType="VARCHAR"/>
            <result property="city" column="city" jdbcType="VARCHAR"/>
            <result property="country" column="country" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <!-- 一对多：嵌套查询 -->
    <select id="queryWithRolesByNestedQuery" resultMap="UserWithRolesQueryMap">
        SELECT id, username, password, email, create_time, address_id
        FROM user
        WHERE id = #{id}
    </select>
    <resultMap id="UserWithRolesQueryMap" type="org.example.suanfa.shiyan.entity.User" extends="UserMap">
        <collection property="roles" column="id" javaType="java.util.List" ofType="org.example.suanfa.shiyan.entity.Role"
                    select="selectRolesByUserId"/>
    </resultMap>
    <select id="selectRolesByUserId" resultMap="RoleMap">
        SELECT r.id, r.role_name, r.description
        FROM role r
                 JOIN user_role ur ON r.id = ur.role_id
        WHERE ur.user_id = #{userId}
    </select>

    <!-- 一对多：嵌套结果 -->
    <select id="queryWithRolesByNestedResult" resultMap="UserWithRolesResultMap">
        SELECT u.id, u.username, u.password, u.email, u.create_time, u.address_id,
               r.id as role_id, r.role_name, r.description
        FROM user u
                 LEFT JOIN user_role ur ON u.id = ur.user_id
                 LEFT JOIN role r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>
    <resultMap id="UserWithRolesResultMap" type="org.example.suanfa.shiyan.entity.User" extends="UserMap">
        <collection property="roles" javaType="java.util.List" ofType="org.example.suanfa.shiyan.entity.Role">
            <id property="id" column="role_id" jdbcType="INTEGER"/>
            <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

</mapper>